
= インプットを呼びこむ世界一単純なアウトプット

//flushright{
@Udomomo
//}

#@# 著者名確認願います。

== まえがき: インプットの方が好きなあなたへ


アウトプットは大切だよなあ、でも苦手だしもう少し勉強してから...というあなた。このコラムは、そんなあなたと同じインプット大好きな人間が書いています。


自分を大勢の人の前にさらすというのは、リアルでもネットでもとても勇気の必要なことですよね。私は今でも怖いです。コミュニケーションがそこまで得意ではないので、今でも人と話すときは、ああ怒らせないかな、会話続くかなという不安がよぎります。


にも関わらず、私がどうしてアウトプットをしているのかといえば、「外に出て行くことがより良いインプットにつながる」と考えているからです。そして、ここでいうアウトプットとは、ブログやLTだけではなく、もっと手軽で簡単なものも含んでいます。このコラムでは、アウトプットに自信がない人が、より多くのインプットを得るためにどうやって外に出ていけばいいか、その最初の一歩について紹介します。


== 初心者を抜け出した気になれない...


私は学生時代はド文系で、就職した当時はエンジニアではない別の職種でした。社内で部署移動してエンジニアになったときは26歳になっていました。人よりスタートが遅れた分、人一倍勉強しなければと思い、普段からいろいろな技術書を読んだり、自分でGoogle検索をしまくったりと奮闘しました。



エンジニア2年目になると、それなりに仕事は回せるようになってきましたが、ここで気になったのが「自分に成長実感がないこと」でした。確かにちゃんとタスクはこなせるのですが、自分の知識はまだまだ表面をなでたくらいではないのか？という不安が重くのしかかってきたのです。



インプット指向の私は本を探して勉強しようとしましたが、たいていの本は入門者向けのわかりやすい本か、とても難しい本であることが多く、その橋渡しになるようなものがなかなか見つかりませんでした。会社としても、人数が少ないので基本的には自力で勉強してもらうという方針だったため、新しい知見について聞ける人が周りにほとんどいませんでした。


== アンテナを広げるために表に出る


そこで考えたのが、自分の情報源を増やすためにアンテナを広げることです。自分一人の力だけで強くなったエンジニアはおそらくいません。もっと自分のアンテナを広げられれば、同じように悩んでいる人から役立つ学びを得られるのでは？と考えました。



とはいえ、どうやってアンテナを広げればいいかわかりません。悩んだ結果、次のような考えに達しました。



 * そもそも自分にぴったりの情報源なんて予測できるものではない
 * まずは質より量だ！他の人との接点を増やそう



いうなれば、インプットのためにアウトプットをすることになったわけです。


== 世界一単純なアウトプット


アウトプットといっても、いきなり人前で発表したり、ブログの記事を書いたりする必要はありません。人と接するのが苦手で、SNSにもろくに投稿してこなかった私にとって、それは高すぎるハードルでした。



そこで私の場合、自分にとってほとんど負担のかからない方法から少しずつ始めることにしました。


=== まずはフォローするものを増やす


最初はとにかく接点を増やすことをゴールとし、いろいろなものをフォローすることに徹しました。


 * エンジニアのTwitterを見つけたらとりあえずフォローする
 * Slackコミュニティを見つけたらとりあえず入る
 * connpassやDoorKeeperなどで面白そうなイベントをやっているグループをフォローする
 * そのイベントに行ってみる   
 * イベント後は参加者のTwitterを全員分フォローする


などをひたすら行いました。私のTwitterのフォロー数(フォロワー数ではない)はもともと10~20程度しかありませんでしたが、この時点で300くらいにまで増えました。


えっ、それはアウトプットなの？と思うかもしれませんが、仕事でもないのに他のエンジニアがいる場所に自分を晒しに行っているわけですから、立派なアウトプットです。フォロー数を増やすことで自分のところにトレンドの情報が回ってきやすくなるうえ、自分と異なる技術を持ち異なる環境にいる人から大きな刺激を受けることができます。自分の会社における「エンジニアとはこういう仕事をする人」という考え方が絶対的なものではない、ということがわかるのです。


なお、入ってみたら面白くなかった、ということもこの段階では多くあると思いますが、そういうところからは後でフェードアウトすればOKです。いろいろな情報源を作ることで、自分が何に興味や課題感を持っているのかがわかってくるはずです。 


=== Slackコミュニティで何か投稿してみる


エンジニア界隈の空気感に慣れてきたら、次は自分からも何か発信してみましょう。とはいえ、いきなりインターネットに技術的なことを発信するのはまだハードルが高いという方もいるかもしれません。


そこでおすすめなのが、Slackコミュニティに投稿することです。多様なエンジニアが集まってはいるもののクローズドな空間なので、カジュアルな内容や素朴な質問を投稿しやすく、返事も返ってきやすい傾向があります。特に、何か特定の技術とは関係のないカジュアルなSlackコミュニティであれば、さらに投稿のハードルは下がります。


個人的におすすめのSlackコミュニティは、この本の執筆母体でもある「エンジニアの登壇を応援する会@<fn>{engineers-lt}」です。その名の通り、登壇を含めたアウトプットをしたい人たちが集まっています。技術相談から飯テロ画像まで何でも気軽に投稿できますので、興味のある方はGoogle検索して公式サイトから加入してください。 


//footnote[engineers-lt][https://portal.engineers-lt.info]


=== Twitterでつぶやいてみる


投稿に慣れてきたら、Twitterでもつぶやいてみましょう。日常的なことでも良いですが、技術に関する投稿の方がエンジニアから注目されやすいです。といっても、大層なことである必要はなく、仕事でちょっと調べ物をしてわかった知見や便利なコマンド、技術に関連する愚痴でも良いです。


重要なのは、少しずつの投稿でもいいのであまり日にちを空けすぎないことです。頻繁に投稿する方が、他の人のタイムラインに表示されてフォローされやすくなります。すると、そのフォローをしてきた人をこちらからフォローすることで、さらに情報源を増やせます。


=== 質問サイトで質問してみる


質問サイトというのは、まさに技術的なインプット(回答)を得るためにアウトプット(質問)をする場です。良い質問をすれば、単に自分の行き詰まりが素早く解決するだけでなく、参考になる記事や、その技術についての関連情報なども教えてもらえることがあります。


とはいえ、オンラインで質問する場合、回答者はこちらの詳しい状況を知りようがないため、雑な質問では答えてくれません。そのため、どこで行き詰まっているか、何を試したのか、使っている技術やそのバージョンは何かなどを正確に伝える必要があります。少し難しいかもしれませんが、これができるようになれば、他の場でコミュニケーションするのにも大いに役立ちます。


質問サイトはいくつかありますが、個人的にはteratail@<fn>{teratail}をおすすめします。単に回答者が多いだけでなく、「正確な質問をする」ことが非常に重視されているためです。質問に雑なところがあると、何の情報を追加すべきか指摘が来るので、技術についてのアウトプットをするうえでとても良い練習になります。   


//footnote[teratail][https://teratail.com/]


=== イベントの懇親会に出てみる


参加したイベントが面白かったのであれば、ぜひ懇親会にも参加する方が良いです。インターネットに載らないような、個人の詳しい経験談やそれに基づく考え方などを聞けることがあります。


私自身、もともとコミュニケーションに自信がなく、懇親会という場が苦手でしたが、最初のうちは「誰か一人と話せば帰って良い」というマイルールを作って自分を慣らしていきました。他にも、輪になって盛り上がっている人たちの隣にさり気なく立ち、周りの人とリアクションを徐々に合わせることで、自然と話の輪に入り込むといった方法もあります。必ずしも自分が話の主役になる必要はありません。重要なのは他の人と接しに行くことです。



=== アンテナを増やすことでインプットが増える


ここまで書いてきたようなことを習慣づけると、入ってくる情報がだいぶ変わってきます。知らないサイトの良い記事がSlackでシェアされたり、懇親会で出会った人が新しいフレームワークについて熱く語ってきたり、Twitterでよくわからないテーマについてエンジニア同士が議論しているのを目にしたりするようになると思います。インプット好きなあなたなら「なんだそれは...？」と思って調べ出すでしょう。そうしてあなたの知識は、未知の領域へと広がっていくのです。


== 実際に得られたインプット


そうは言っても、そんなにインプットが変わるものなの？と思うかもしれません。そこで、私がアウトプットを始めてから実際にどんなインプットを得られたのかを少し書いていきたいと思います。


=== 自分が知っている技術分野の深め方


最初に書いた通り、もともと私が持っていた課題意識は、初心者から中級者にステップアップする方法がわからないというものでした。


そこで、自分の知っている知見をもとにブログ記事を書き、それをシェアするようにしてみたところ、不正確な内容に対して指摘が入ったり、同じところを勉強した経験のある方から補足を教えていただいたりすることが増えました。特に、Java8のラムダ式についてまとめた記事をシェアしたときは、詳しい方からおすすめの本として「Effective Java」と「Java SE 8 実践プログラミング」を紹介していただきました。Javaの本は数がとても多く、どれが今の自分に合っている本か一人ではわからなかったため、とても助かりました。


=== 自分が知らない技術分野の動向


私は普段サーバサイドを担当しているため、フロントエンドはエンジニアになりたての頃に少しかじった程度の知識しかありませんでした。しかし、私が入っているSlackコミュニティにフロントエンドをバリバリ書いている方が何人かおり、その方たちがシェアした記事でStorybook for VueやReact Hooksなどの存在を知りました。フロントエンドの世界でのお作法は、知らない間に大きく変わっていたのです。


さらに、そのSlackコミュニティにいらした方からの情報で、技術書典5で「図でざっくりわかるWEBフロントエンドの歴史本@<fn>{webfront}」という薄い本が発売されることを知りました。そしてさっそく購入し、これまでの技術革新の歩みをキャッチアップすることができました。


//footnote[webfront][https://booth.pm/ja/items/1044078 から電子版を購入できます。]


広く浅くでも良いので他分野の知識を持っておくと、会社の先輩エンジニアとの話についていきやすくなり、また自分が担当していないコンポーネントのコードリーディングにも役立ちます。自分一人で勉強しているだけでは、そもそもタスクとしての優先順位が低くなり、知ろうともしなかったと思います。


=== 副業


自分でも意外ですが、副業を始めることにもなりました。そのきっかけとなったのは、会社の元先輩と飲んでいたときに「うちの会社でエンジニアが足りてないんだけど、副業とか興味ある？」と声をかけられたことです。


以前から副業には興味があったのですが、ずっと探し方がわからずにいました。イベントで出会った、副業をしているエンジニア10人ほどに「どうやって副業を見つけたんですか？」と聞いたことがあるのですが、ほぼ必ず「友達に紹介された」「知り合いから頼まれた」という答えが返ってきて、(そんな知り合いはいないぞ...)と途方に暮れた覚えがあります。


しかし実際のところ、副業の話が舞い込んだのは、別にキャリア相談でもなんでもない、単にお世話になった先輩に久しぶりに会おう！というだけのつもりで行った場でした。もちろん、何も起こらずただ飲んで終わりの飲み会もたくさんありますが、人というのは気まぐれなもので、いつ何の情報を転がしてくるかわかりません。人から良い情報を得ようと思うのなら、まずは人と接する回数を多くするのが一番の近道なんだと気づきました。人脈に自信がなくても、まずは会社の先輩や同僚・学生時代の友達など、今まで接点があった人との関係を絶やさないようにするのがよいかもしれません。


== おわりに: 外に出て情報を取りに行こう


インプット志向であるからこそ、情報を取りに行くためのアウトプットが必要です。そしてそれは、大層なことである必要はありません。


少しずつ自分の行動を変え、アウトプットへの抵抗感を下げていくことで、より良いインプットを得られる情報源が広がっていきます。そしてそれをもとに次のアウトプットをしてみることで、学びの循環が回るようになっていくはずです。まずはちょっとしたことを簡単なやり方でアウトプットしてみましょう。

